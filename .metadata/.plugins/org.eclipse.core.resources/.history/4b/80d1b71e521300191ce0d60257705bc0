
public class currentTournamentHandling {

	
	
	
public String getPlayerListStringWithRanking(String playersName, int playerRank, String typeTournament, int totalPlayersInTournament) {

		
		
		String tempString = playersName + "     punten: "
				+ getPointsCurrentTournament(typeTournament, playerRank, totalPlayersInTournament);

		return tempString;
	}

private int getPointsCurrentTournament(String typeTournament, int rankTournament, int totalPlayersInTournament) {
	int valueTopassOn = 0;
	if (totalPlayersInTournament <= 0) {
		
	}

	switch (typeTournament) {
	case "Normaal": {

		if (!isBetween(rankTournament, 1, 7)) {
			valueTopassOn = (1 + totalPlayersInTournament) - rankTournament;
		} else if (isBetween(rankTournament, 6, 7)) {
			valueTopassOn = (1 + totalPlayersInTournament) - rankTournament + 2;
		} else if (isBetween(rankTournament, 4, 5)) {
			valueTopassOn = (1 + totalPlayersInTournament) - rankTournament + 3;
		} else if (isBetween(rankTournament, 2, 3)) {
			valueTopassOn = (1 + totalPlayersInTournament) - rankTournament + 4;
		}else if (rankTournament == 1) {
			valueTopassOn = (1 + totalPlayersInTournament) - rankTournament + 5;
		} else {
			valueTopassOn = (1 + totalPlayersInTournament) - rankTournament;
		}

		return valueTopassOn;
	}
	case "Team": {
		
		
		//6 teams = 18 spelers 

		if (rankTournament == 3) {
			valueTopassOn = (1 + totalPlayersInTournament) - rankTournament + 1;
		}else if (rankTournament== 2) {
			valueTopassOn = (1 + totalPlayersInTournament) - rankTournament + 2;
		}else if (rankTournament == 1) {
			valueTopassOn = (1 + totalPlayersInTournament) - rankTournament + 3;
		}else {
			valueTopassOn = (1 + totalPlayersInTournament) - rankTournament;
		}

		return valueTopassOn;
	}
	default:
		break;
	}

	return valueTopassOn;
}

private boolean isBetween(int x, int lower, int upper) {
	return lower <= x && x <= upper;
}


}
